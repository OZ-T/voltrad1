# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
MAILTO=""
DATE=date +%d-%m-%y
PARAM_DATE=date +%Y%m%d
# IBG Connection
1 3 * * 1-5 /home/david/shell/run_healthcheck_ibg.sh >> /var/log/voltrad1/ib_healthcheck_ibg_$($DATE).log 2>&1 &
# download historical data for option chains
22 3 * * 1-5 /home/david/shell/run_ib_historical_opt.sh 

# download historical data for underlying contracts
10 14 * * 1-5 /home/david/shell/run_healthcheck_ibg.sh >> /var/log/voltrad1/ib_healthcheck_ibg_$($DATE).log 2>&1 &
15 14 * * 1-5 nohup /home/david/shell/p batch_underl_ib_to_db >> /var/log/voltrad1/ib_underlying_$($DATE).log 2>&1 &
52 14-21 * * 1-5 nohup /home/david/shell/p run_volest_report $($PARAM_DATE) >> /var/log/voltrad1/ib_volest_rpt_$($DATE).log 2>&1 &
54 14-21 * * 1-5 nohup /home/david/shell/p run_trend_report $($PARAM_DATE) >> /var/log/voltrad1/ib_trend_rpt_$($DATE).log 2>&1 &


# cron job every weekday during RTH (regular trading hours US)
1 15-23 * * 1-5 /home/david/shell/run_healthcheck_ibg.sh >> /var/log/voltrad1/ib_healthcheck_ibg_$($DATE).log 2>&1 &
42 15-21 * * 1-5 /home/david/shell/run_ib_opt.sh
57 15-21 * * 1-5 nohup /home/david/shell/p batch_orders_to_db  >> /var/log/voltrad1/ib_orders_$($DATE).log 2>&1 &
59 15-21 * * 1-5 nohup /home/david/shell/p batch_acc_to_db  >> /var/log/voltrad1/ib_accounting_$($DATE).log 2>&1 &

# cron daily yahoo option chains save to hdf5
10 16-22 * * 1-5 /home/david/shell/p batch_optchain_yhoo_to_db >> /var/log/voltrad1/yahoo_opt_$($DATE).log 2>&1 &
#02 16-22 * * 1-5 /home/david/shell/run_shark_tic.sh 

# store orders executed during the day and portfolio snapshot
36 23 * * 1-5 nohup /home/david/shell/p batch_orders_to_db  >> /var/log/voltrad1/ib_orders_$($DATE).log 2>&1 &
38 23 * * 1-5 nohup /home/david/shell/p batch_acc_to_db  >> /var/log/voltrad1/ib_accounting_$($DATE).log 2>&1 &

59 0 * * 6 /home/david/shell/run_backup.sh

# FIXME 55 22 * * 1-5 /home/david/shell/run_ivol_opt.sh 
# economic calendar from biz yahoo. start of week and end of week to get the resulting number of the economic events
# this creates duplicates in the hdf5 which need to be handled in the subsequent analysis
# FIXME 55 5 * * 1 /home/david/shell/run_yhoo_eco_calendar.sh 
# FIXME 55 5 * * 6 /home/david/shell/run_yhoo_eco_calendar.sh 
