upstream notebook {
    server localhost:45451;
}

upstream netdata {
    server 127.0.0.1:19999;
    keepalive 64;
}

server {
    listen      80;
    #server_name voltrad1 ;
    #listen 443 ssl ;
    server_name  blablio.tech www.blablio.tech;
    #ssl_certificate /etc/letsencrypt/live/blablio.tech/fullchain.pem;
    #ssl_certificate_key /etc/letsencrypt/live/blablio.tech/privkey.pem;

    # ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # duplicated in /etc/letsencrypt/options-ssl-nginx.conf
    # ssl_prefer_server_ciphers on; # duplicated in /etc/letsencrypt/options-ssl-nginx.conf
    ssl_dhparam /etc/ssl/certs/dhparam.pem;
    ssl_stapling off;
    # ssl_stapling_verify on;
    add_header Strict-Transport-Security max-age=15768000;


    location ~ /\.git {
        deny all;
    }

    auth_basic "Required";
    auth_basic_user_file /var/www/netdata-access;

    charset     utf-8;
    client_max_body_size 75M;
    error_page 401 403 404 /404.html;

    add_header 'Access-Control-Allow-Origin' '*';
    location ~* \.(css|png|jpg|jpeg|gif|ico|html)$ {
        root /var/www/static ;
        expires max;
    }

    location /voltrad1/ {
        autoindex on;
        root /var/www/static ;
        try_files $uri $uri/ =404;
    }

    location ~ /web-voltrad1 {
        root /var/www/static ;
        try_files $uri $uri/ =404;
    }



    location ~ /.well-known {
           root /var/www/static ;
           allow all;
    }

    location ^~ /bot { 
        # doesnt require authentication  usung following clause
        auth_basic off;
        try_files $uri @yourapplication; 
    }
    location @yourapplication {
        # doesnt require authentication  usung following clause
        auth_basic off;
        include uwsgi_params;
        uwsgi_pass unix:/tmp/blablio_fb.sock;
    }

    location ^~ /mivaya {
        return 301 /mivaya/;
    }

   location ~ /mivaya/(?<ndpath>.*) {
        proxy_redirect off;
        proxy_set_header Host $host;
        alias /usr/share/netdata/web ;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_pass_request_headers on;
        proxy_set_header Connection "keep-alive";
        proxy_store off;
        proxy_pass http://netdata/$ndpath$is_args$args;

        gzip on;
        gzip_proxied any;
        gzip_types *;
    }



    location /tic { try_files $uri @yourapplication2; }
    location @yourapplication2 {
        include uwsgi_params;
        uwsgi_pass unix:/tmp/voltrad1.sock;
    }


location /voltrad1-voltrad1 {
        proxy_pass            http://notebook;
        proxy_set_header      Host $host;
}

location ~ /api/kernels/ {
        proxy_pass            http://notebook;
        proxy_set_header      Host $host;
        # websocket support
        proxy_http_version    1.1;
        proxy_set_header      Upgrade "websocket";
        proxy_set_header      Connection "Upgrade";
        proxy_read_timeout    86400;
    }
location ~ /terminals/ {
        proxy_pass            http://notebook;
        proxy_set_header      Host $host;
        # websocket support
        proxy_http_version    1.1;
        proxy_set_header      Upgrade "websocket";
        proxy_set_header      Connection "Upgrade";
        proxy_read_timeout    86400;
}



    listen 443 ssl; # managed by Certbot
ssl_certificate /etc/letsencrypt/live/blablio.tech/fullchain.pem; # managed by Certbot
ssl_certificate_key /etc/letsencrypt/live/blablio.tech/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot



    # Redirect non-https traffic to https
     if ($scheme != "https") {
         return 301 https://$host$request_uri;
     } # managed by Certbot

}

#server {
#    listen 80;
#
#       location ~ /.well-known {
#           root /var/www/static ;
#           allow all;
#    }
#
#    server_name blablio.tech www.blablio.tech;
#    #return 301 https://$host$request_uri;
#}


